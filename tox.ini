[tox]
envlist = linters,docs,unit-tests

[testenv]
# {posargs} contains additional arguments specified when invoking tox. e.g. tox -- -s -k test_foo.py
commands =
    coverage run -m pytest {posargs}
    coverage combine
    coverage report
    coverage html
extras = test

[testenv:linters]
basepython = python3.7
skip_install = true
deps =
    {[testenv:isort]deps}
    {[testenv:black]deps}
    {[testenv:flake8]deps}
commands =
    {[testenv:isort]commands}
    {[testenv:black]commands}
    {[testenv:flake8]commands}

[testenv:flake8]
basepython = python3.7
skip_install = true
deps =
    flake8
commands =
    flake8 {posargs}

[testenv:isort]
basepython = python3.7
skip_install = true
deps =
    isort
commands =
    isort -rc . {posargs}

[testenv:black]
basepython = python3.7
skip_install = true
deps =
    black
commands =
    black ./ {posargs}

[testenv:docs]
basepython = python3.7
deps =
    sphinx
    sphinx-rtd-theme
commands =
    sphinx-apidoc -e -f -M --implicit-namespaces -H "API Reference" -o doc/_apidoc src/braket
    sphinx-build -E -T -b html doc build/documentation/html

[testenv:serve-docs]
basepython = python3.7
skip_install = true
changedir = build/documentation/html
commands =
    python -m http.server {posargs}

[testenv:zip-build]
basepython = python3.7
skip_install = true
commands =
    /bin/sh -c 'tar -czvf build_files.tar.gz build/'

[testenv:performance]
basepython = python3.7
whitelist_externals=
    git
    rm
    sh
changedir = test
setenv =
    WORKING_BRANCH = $(git rev-parse --abbrev-ref HEAD)
commands =
    sh -c performance/compare_performance.sh
    #rm -rf "$(git rev-parse --show-toplevel)/.benchmarks"
    #git stash -u
    #echo ${env:WORKING_BRANCH}
    #git checkout master
    #rm -rf $(git rev-parse --show-toplevel)/.benchmarks
    #pytest --benchmark-autosave --benchmark-only performance
    #git checkout $working_branch
    #pytest --benchmark-autosave --benchmark-only --benchmark-compare --benchmark-compare-fail=mean:0.1 performance
extras = test